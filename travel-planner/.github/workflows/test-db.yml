name: Database Integration Tests

on:
  push:
    branches: [ project ]
  pull_request:
    branches: [ main ]

env:
  POSTGRES_USER: test_user
  POSTGRES_PASSWORD: test_password
  POSTGRES_DB: travel_planner_test
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432

jobs:
  test-database:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install psycopg2-binary

      - name: Run migrations
        run: |
          flyway -url=jdbc:postgresql://${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }} \
                 -user=${{ env.POSTGRES_USER }} \
                 -password=${{ env.POSTGRES_PASSWORD }} \
                 -locations=filesystem:./infrastructure/migrations \
                 migrate

      - name: Run unit tests
        run: |
          pytest tests/unit -v --cov=src/db --cov-report=xml

      - name: Run integration tests
        run: |
          pytest tests/integration -v
        env:
          DATABASE_URL: postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.POSTGRES_HOST }}:${{ env.POSTGRES_PORT }}/${{ env.POSTGRES_DB }}

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Schema validation
        run: |
          python scripts/validate_schema.py
